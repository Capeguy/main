{"acadYear":"2019/2020","description":"Before software can be designed, its requirements must be well understood. This in turns requires a thorough understanding of the application domain. Based on the requirements, software engineers construct design models, and then use these design models as guide to construct software implementations. This module will cover formal specification and verification techniques for accurately capturing and reasoning about requirements, model and code. The topics covered include modeling notations, temporal logics, model checking, software model checking, theorem proving, and symbolic execution based analysis. Most importantly, the module will attempt to inculcate an appreciation and understanding of formal thinking in software design and construction.","title":"Formal Methods for Software Engineering","department":"Computer Science","faculty":"Computing","workload":[2,1,0,3,4],"prerequisite":"CS2103 or its equivalent","moduleCredit":"4","moduleCode":"CS4211","semesterData":[{"semester":1,"timetable":[{"classNo":"1","startTime":"0900","endTime":"1000","weeks":[1,2,3,4,5,6,7,8,9,10,11,12,13],"venue":"COM1-0206","day":"Monday","lessonType":"Tutorial","size":80},{"classNo":"1","startTime":"1000","endTime":"1200","weeks":[1,2,3,4,5,6,7,8,9,10,11,12,13],"venue":"COM1-0206","day":"Monday","lessonType":"Lecture","size":80}],"examDate":"2019-11-30T05:00:00.000Z","examDuration":120}],"prereqTree":"CS2103"}
